"use strict";(self.webpackChunkesx_docs=self.webpackChunkesx_docs||[]).push([[7474],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return s}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),c=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(n),s=r,g=m["".concat(d,".").concat(s)]||m[s]||u[s]||l;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6223:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={},d="onPlayerDeath",c={unversionedId:"legacy/common/events/onplayerdeath",id:"legacy/common/events/onplayerdeath",title:"onPlayerDeath",description:"data Table Information",source:"@site/docs/legacy/common/events/onplayerdeath.md",sourceDirName:"legacy/common/events",slug:"/legacy/common/events/onplayerdeath",permalink:"/docs/legacy/common/events/onplayerdeath",editUrl:"https://github.com/esx-framework/esx-docs.github.io/tree/develop/docs/legacy/common/events/onplayerdeath.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"getpedmugshot",permalink:"/docs/legacy/client/functions/docs/legacy/client/functions/game/getpedmugshot"},next:{title:"ClearTimeout",permalink:"/docs/legacy/common/functions/cleartimeout"}},p=[{value:"<code>data</code> Table Information",id:"data-table-information",children:[],level:4},{value:"Example Server-Side Usage",id:"example-server-side-usage",children:[],level:4},{value:"Example Client-Side Usage",id:"example-client-side-usage",children:[],level:4}],u={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"onplayerdeath"},"onPlayerDeath"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"AddEventHandler('esx:onPlayerDeath', function(data)\n\nend)\n")),(0,l.kt)("h4",{id:"data-table-information"},(0,l.kt)("inlineCode",{parentName:"h4"},"data")," Table Information"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"child"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"explanation"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"victimCoords"),(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"killerCoords"),(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"deathCause"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the hash of the weapon/model/object that killed the victim.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"killedByPlayer"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Was the player killed by another player? The data below is only generated when killed by a player.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"distance"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The distance (in GTA units) between the victim and killer upon death")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"killerServerId"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The killer's server id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"killerClientId"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The killer's client id")))),(0,l.kt)("h4",{id:"example-server-side-usage"},"Example Server-Side Usage"),(0,l.kt)("p",null,"Simple Kill Notifications"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"RegisterServerEvent('esx:onPlayerDeath')\nAddEventHandler('esx:onPlayerDeath', function(data)\n    data.victim = source\n\n    if data.killedByPlayer then\n        TriggerClientEvent('esx:showNotification', -1, GetPlayerName(data.victim) .. 'was killed by ' .. GetPlayerName(data.killerServerId) .. ' from ' .. data.distance .. ' units')\n    else\n        TriggerClientEvent('esx:showNotification', -1, GetPlayerName(data.victim) .. ' died')\n    end\nend)\n")),(0,l.kt)("h4",{id:"example-client-side-usage"},"Example Client-Side Usage"),(0,l.kt)("p",null,"Here is a perfect example for checking if the player (client side) is dead, which is useful for a lot of things, for example only allowing menus to be open if alive."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local IsDead = false\n\nAddEventHandler('esx:onPlayerDeath', function(data)\n    IsDead = true\nend)\n\nAddEventHandler('playerSpawned', function(spawn)\n    IsDead = false\nend)\n")))}m.isMDXComponent=!0}}]);